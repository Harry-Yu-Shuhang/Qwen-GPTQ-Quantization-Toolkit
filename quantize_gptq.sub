#!/bin/bash
#SBATCH --job-name=qwen_gptq                # 作业名
#SBATCH --partition=a100                    # 使用 a100 分区
#SBATCH --nodelist=aisurrey15               # 节点名称
#SBATCH --nodes=1                           # 单节点（适用于GPTQ单卡）
#SBATCH --ntasks=1                          # 单任务
#SBATCH --ntasks-per-node=1                 # 每个节点1任务
#SBATCH --cpus-per-task=32                  # 每任务 32 CPU，用于加速处理
#SBATCH --gpus-per-node=1                   # 每节点1块GPU
#SBATCH --mem=512G                          # 内存为512GB（避免OOM）
#SBATCH --time=1-00:00:00                   # 最长运行1天
#SBATCH --exclusive                         # 独占整个节点
#SBATCH --output=logs/output_%j.log         # 标准输出
#SBATCH --error=logs/error_%j.log           # 错误输出


set -eEuo pipefail
trap 'echo "❌ 任务失败: 行号 $LINENO, 退出码 $?"' ERR

echo "🔍 作业开始: $(date)"
echo "📂 当前目录: $(pwd)"
cd "$SLURM_SUBMIT_DIR"

DEF_FILE="build_GPTQModel/apptainer.def"
SIF_FILE="build_GPTQModel/qwen-gptq.sif"
OUTPUT_DIR="quantized_models/qwen-32b-gptq"

# 使用 /tmp 避免 I/O 错误
export APPTAINER_TMPDIR=/tmp
export APPTAINER_CACHEDIR=/tmp

# 创建输出目录
mkdir -p "$OUTPUT_DIR"

# 构建镜像（如有必要）
if [ ! -f "$SIF_FILE" ] || [ "$DEF_FILE" -nt "$SIF_FILE" ]; then
    echo "📦 构建 Apptainer 镜像..."
    apptainer build --force "$SIF_FILE" "$DEF_FILE"
else
    echo "✅ 镜像已是最新: $SIF_FILE"
fi

# 启动量化任务
echo "🚀 启动 GPTQ 量化..."
apptainer run --nv "$SIF_FILE" \
    --model_id Qwen/Qwen2.5-32B-Instruct \
    --output_dir "/mnt/fast/nobackup/scratch4weeks/ly0008/ysh/Qwen-GPTQ-Quantization-Toolkit/${OUTPUT_DIR}" \
    --config /opt/app/configs/qwen_32b_gptq.yaml \
    --cache_dir /tmp/hf_cache

echo "✅ 任务完成: $(date)"
